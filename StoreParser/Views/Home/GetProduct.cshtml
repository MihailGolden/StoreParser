@model StoreParser.Models.Product
@{
    ViewData["Title"] = "GetProduct";
}

<h1 class="header-light text-center">@Model.Name</h1>

<h3 class="header-light">Original store link: <a href="@Model.Url">@Model.Url</a></h3>

<div class="container" style="width:600px; height:400px">
    <div id="myCarousel" class="carousel slide" data-ride="carousel" data-interval="6000">
        <ol class="carousel-indicators">
            <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
            <li data-target="#myCarousel" data-slide-to="1"></li>
            <li data-target="#myCarousel" data-slide-to="2"></li>
        </ol>
        <div class="carousel-inner" role="listbox" style="height:600px">
            @if (Model.Images.Count() > 0)
            {
                <div class="item active">
                    <img style="max-width:600px; max-height:550px" src="data:image/jpeg;base64,@(Convert.ToBase64String(Model.Images[0].Data))" alt="Product image" class="d-block w-100" alt="...">
                </div>
                @for (int i = 1; i < Model.Images.Count(); i++)
                {
                    <div class="item">
                        <img style="max-width:600px; max-height:550px" src="data:image/jpeg;base64,@(Convert.ToBase64String(Model.Images[i].Data))" alt="Product image" class="d-block w-100">
                    </div>
                }
            }
        </div>
        <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
            <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
            <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>
</div>
<div class="container">
    <div class="product-description">
        <p>
            @Model.Description
        </p>
    </div>
    <h3>
        Prices:
    </h3>
    @{
        var lastDate = Model.Prices.Max(d => d.PriceLastDate);
        var actualPrice = Model.Prices.Where(p => p.PriceLastDate == lastDate).ToList().FirstOrDefault();
        <h3>
            Actual price: <span class="label label-danger">@actualPrice.ProductPrice.ToString()</span> - parsed: @lastDate.ToString()
        </h3>
    }
        <hr />
        <h4>History:</h4>
    @for (int i = Model.Prices.Count() -1; i >= 0; i--)
    {
        <p>
            <span class="label label-info">@Model.Prices[i].ProductPrice </span>
            <span>&nbsp; - @Model.Prices[i].PriceLastDate</span>
        </p>
    }
</div>


